# -*- coding: utf-8 -*-
"""17_03.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_msNcLTv4NCIZ4PDZKcFqVpre69gBvvQ
"""

#Задача 1. Бросок кубика.

import random

a = 0
b = 0
i = 1
while i <= 4: 
  a = random.randint(1,6)
  b =+ a
  print(i, '- Случайный бросок кубика:', a)
  i += 1
print("Summa =", b)

# решение с видео

import random
k = 4
y = []
while k != 0:
  x = random.randint(1,6)
  k -= 1
  y.append(x)
  print(y)
total = sum(y)
print("Сумма =", total)

# Задача 2. Пароли.

import random

chars = '+-/*!&$#?=@<>abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890'
length = input("Введите длину пароля:" + '\n')
password = ''
try:
  length = int(length)
  for n in range(length):
    password += random.choice(chars)
  print("Password =", password)
except ValueError:
  print('Вы ввели буквы, пожалуйста, введите корректное значение')

# Алгоритм Евклида v.1

a = 40
b = 35

while a != 0 and b != 0:
  if a > b:
    a = a % b
  else:
    b = b % a
print(a + b)

# Алгоритм Евклида v.2

a = 35
b = 14

while a != b:
  if a > b:
    a -= b
  else:
    b -= a
    
print(a)

#Сортировка выбором.

from random import randint

n = 10
arr = []

for i in range(n):
  arr.append(randint(10, 50))
print(arr)

i = 0
while i < n - 1:  # пока не закончится длина масива
  m = i
  j = i + 1
  while j < n:
    if arr[j] < arr[m]:
      m = j
    j += 1
  arr[i], arr[m] = arr[m], arr[i]
  i += 1
print('New =', arr)

# Сортировка выбором метод

arr = [12, 4, 54, 29, 46, 36, 72, 99, 85]

x = sorted(arr)

print('New =', x)

# Задача 3. Сортировка выбором.

arr = [12, 4, 54, 29, 46, 36, 72, 99, 85]

n = len(arr)

i = 0
while i < n - 1:  # пока не закончится длина масива
  m = i
  j = i + 1
  while j < n:
    if arr[j] < arr[m]:
      m = j
    j += 1
  arr[i], arr[m] = arr[m], arr[i]
  i += 1
print('New =', arr)

# Сортировка пузырьком FOR

arr = [7, 13, 3, 5, 9]
n = len(arr)

for i in range(n-1):
  for j in range(n-i-1):
    if arr[j] > arr[j+1]:
      arr[j], arr[j+1] = arr[j+1], arr[j]
print(arr)

# Сортировка пузырьком WHILE

arr = [7, 13, 3, 5, 9]
n = len(arr)

i = 0
while i < n-1:
  j = 0
  while j< n-i-1:
    if arr[j] > arr[j+1]:
      arr[j], arr[j+1] = arr[j+1], arr[j]
    j += 1
  i += 1
print(arr)

# Задача 4. Отсортировать рандомный массив методом "пузырька".

from random import randint

n = 10
arr = []

for i in range(n):
  arr.append(randint(1, 100))
print(arr)

for i in range(n-1):
  for j in range(n-i-1):
    if arr[j] > arr[j+1]:
      arr[j], arr[j+1] = arr[j+1], arr[j]
print(arr)

# Бинарный поиск

def binary_search(arr, low, high, x):
  if high >= low:
    mid = (high + low) // 2
    if arr[mid] == x:
      return mid
    elif arr[mid] > x:
      return binary_search(arr, low, mid-1, x)
    else:
      return binary_search(arr, mid+1, high, x)
  else:   # если элемент не в массиве
    return -1

arr = [4, 7, 10, 17, 33, 45, 67, 89, 101, 213, 420]
x = input('Введи число:')
x = int(x)

result = binary_search(arr, 0, len(arr)-1, x)

if result != -1:
  print('Элемент найден в массиве под индексом =', str(result))
else:
  print('Элемент отсутсвует в массиве!')

# Калькулятор